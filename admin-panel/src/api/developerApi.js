import axios from "axios";
import { API_BASE_URL } from "../config"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–π URL –∏–∑ config.js

const API_URL = `${API_BASE_URL}/developer/settings`;
const DATA_FORMATS_URL = `${API_BASE_URL}/data_formats`;

// üîπ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
const getAuthToken = () => {
    const token = localStorage.getItem("token");
    if (!token) {
        console.error("–û—à–∏–±–∫–∞: –¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç");
        window.location.href = "/login";
        return null;
    }
    return token;
};

// üîπ –ö–æ–Ω—Ñ–∏–≥ –¥–ª—è axios —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º Authorization
const getAuthHeaders = () => {
    const token = getAuthToken();
    return token
        ? {
            headers: {
                "Content-Type": "application/json",
                Authorization: `Bearer ${token}`,
            },
        }
        : {};
};

// üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø–æ –ª–æ–≥–∏–Ω—É
const getSetting = async () => {
    const login = localStorage.getItem("user_login"); // –ë–µ—Ä–µ–º –ª–æ–≥–∏–Ω –∏–∑ localStorage
    if (!login) {
        console.error("–û—à–∏–±–∫–∞: –õ–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ localStorage");
        window.location.href = "/login";
        return null;
    }

    try {
        console.log(`üìå –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è: ${login}`);
        const response = await axios.get(`${API_URL}/${login}`, getAuthHeaders());
        console.log("‚úÖ –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:", response.data);
        return response.data;
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:", error);
        throw error;
    }
};

// üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
const updateSetting = async (data) => {
    const login = localStorage.getItem("user_login");
    if (!login) {
        console.error("–û—à–∏–±–∫–∞: –õ–æ–≥–∏–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç");
        window.location.href = "/login";
        return;
    }

    if (!data || Object.keys(data).length === 0) {
        console.error("üö® –û—à–∏–±–∫–∞: –ü–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—É—Å—Ç—ã–µ!", data);
        return;
    }

    console.log("üì° –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä:", JSON.stringify(data, null, 2));

    try {
        const response = await axios.put(`${API_URL}/${login}`, data, getAuthHeaders());
        console.log("‚úÖ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response.data);
        return response.data;
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è ${login}:`, error);
        throw error;
    }
};

// üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ –¥–∞–Ω–Ω—ã—Ö
const getDataFormats = async () => {
    try {
        console.log("üìå –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç—ã –¥–∞–Ω–Ω—ã—Ö...");
        const response = await axios.get(DATA_FORMATS_URL, getAuthHeaders());
        console.log("‚úÖ –ü–æ–ª—É—á–µ–Ω—ã —Ñ–æ—Ä–º–∞—Ç—ã –¥–∞–Ω–Ω—ã—Ö:", response.data);
        return response.data;
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ä–º–∞—Ç–æ–≤ –¥–∞–Ω–Ω—ã—Ö:", error);
        throw error;
    }
};

// üîπ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
const addDataFormat = async (newFormat) => {
    const data = typeof newFormat === "string" ? { format_name: newFormat } : newFormat;
    try {
        console.log("üìå –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç:", JSON.stringify(data, null, 2));
        const response = await axios.post(DATA_FORMATS_URL, data, getAuthHeaders());
        console.log("‚úÖ –§–æ—Ä–º–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω:", response.data);
        return response.data;
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö:", error);
        throw error;
    }
};

// üîπ –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã (—É–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏ –ª–æ–≥–∏–Ω–∞)
const logout = () => {
    console.warn("üö™ –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã...");
    localStorage.removeItem("token");
    localStorage.removeItem("user_login");
    window.location.href = "/login"; // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
};

// üîπ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º API-—Ñ—É–Ω–∫—Ü–∏–∏
export default {
    getSetting,
    updateSetting,
    getDataFormats,
    addDataFormat,
    logout
};